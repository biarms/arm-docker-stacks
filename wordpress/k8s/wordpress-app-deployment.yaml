kind: Deployment
apiVersion: apps/v1
metadata:
  name: wordpress
  labels:
    io.kompose.service: wordpress
spec:
  replicas: 1
  # About the replicas settings:
  #   Setting a value > 1 for the replicas is not a good idea, at least for the first installation: when a Wordpress pod is started for the first time and see an empty '/var/www/html' folder,
  #   it launches the provisioning of that folder.
  #   In that case, the logs of the first started pod will look like:
  #     > WordPress not found in /var/www/html - copying now...
  #   But the second pod will do the same, because there is no communication between both instance. In that case, the logs will look like:
  #     > WordPress not found in /var/www/html - copying now...
  #     > WARNING: /var/www/html is not empty! (copying anyhow)
  #
  selector:
    matchLabels:
      io.kompose.service: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: wordpress
    spec:
      # If 2 replicats, don't put them on the same server !
      # See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: io.kompose.service
                    operator: In
                    values:
                      - wordpress
              topologyKey: "kubernetes.io/hostname"
      containers:
        - env:
            - name: WORDPRESS_DB_HOST
              value: wordpress-db:3306
            - name: WORDPRESS_DB_NAME
              value: wordpress
            - name: WORDPRESS_DB_PASSWORD_FILE
              value: /run/secrets/db-passwords/db-password-wordpress
            - name: WORDPRESS_DB_USER
              value: wordpress
          image: biarms/wordpress:5.4.0
          name: wordpress
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "128M" # 64M
              cpu: "1.5"
            limits:
              memory: "384M" #"256M" # "192M" # 128M
              cpu: "4"
          volumeMounts:
            - mountPath: /var/www/html
              name: wordpress-htdocs
            - mountPath: "/run/secrets/db-passwords"
              name: wordpress-db-passwords
              readOnly: true
            - name: wordpress-config-volume
              mountPath: /usr/local/etc/php/conf.d/php-ext.ini
              subPath: php-ext.ini
            - name: wordpress-debug-script-volume
              mountPath: /var/www/html/debug.php
              subPath: debug.php
      restartPolicy: Always
      volumes:
        - name: wordpress-htdocs
          persistentVolumeClaim:
            claimName: wordpress-htdocs
        - name: wordpress-db-passwords
          secret:
            secretName: wordpress-db-passwords
        - name: wordpress-config-volume
          configMap:
            name: wordpress-config
        - name: wordpress-debug-script-volume
          configMap:
            name: wordpress-debug-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
data:
  # Don't forget to restart the pod if you change these settings !
  php-ext.ini: |
    # See https://kinsta.com/fr/blog/http-error-wordpress/#increase-php-memory-limit
    memory_limit = 320M
    # default upload_max_filesize is 2M
    upload_max_filesize = 256M
    # post_max_size. See https://wiki.iphoster.net/wiki/Apache_-_mod_fcgid:_stderr:_PHP_Warning:_POST_Content-Length_of_109393046_bytes_exceeds_the_limit_of_104857600_bytes
    post_max_size = 256M
    # https://stackoverflow.com/questions/5164930/fatal-error-maximum-execution-time-of-30-seconds-exceeded
    max_execution_time = 300
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-debug-script
data:
  debug.php: |
    <?php
    echo 'good try'
    //phpinfo();
    ?>